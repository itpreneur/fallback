// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {StringConcat} from "../strings/StringConcat.sol";
import {HtmlDsl} from "./HtmlDsl.sol";

/**
 * @title H, a Solidity HTML DSL
 * @author Generated by `generate-dsl.js` by nathanhleung
 * @notice An HTML DSL for Solidity.
 */
library H {
    /**
     * @dev Creates an arbitrary HTML tag
     */
    function h(string memory tagName) internal pure returns (string memory) {
        return HtmlDsl.customTag(tagName);
    }
    
    /**
     * @dev Creates an arbitrary HTML tag. If the tag is self-closing,
     *     the second parameter will be treated as attributes. If the
     *     tag is not self-closing, the second parameter will be treated
     *     as children.
     * @param tagName The name of the tag
     * @param childrenOrAttributes The children or attributes for the tag
     */
    function h(string memory tagName, string memory childrenOrAttributes)
        internal
        pure
        returns (string memory)
    {
        return HtmlDsl.customTag(tagName, childrenOrAttributes);
    }
    
    /**
     * @dev Creates an arbitrary HTML tag. If the tag is self-closing,
     *     the `children` parameter is ignored.
     * @param tagName The name of the tag 
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h(
        string memory tagName,
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return HtmlDsl.customTag(tagName, attributes, children);
    }
    
    /**
     * @dev Creates a `html` HTML tag.
     */
    function html() internal pure returns (string memory) {
        return h("html");
    }
    
    /**
     * @dev Creates a `html` HTML tag.
     * @param children The children of the tag 
     */
    function html(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("html", children);
    }
    
    /**
     * @dev Creates a `html` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function html(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("html", attributes, children);
    }
      
    /**
     * @dev Creates a `base` HTML tag.
     */
    function base() internal pure returns (string memory) {
        return h("base");
    }
    
    /**
     * @dev Creates a `base` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function base(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("base", attributes);
    }
    
    /**
     * @dev Creates a `head` HTML tag.
     */
    function head() internal pure returns (string memory) {
        return h("head");
    }
    
    /**
     * @dev Creates a `head` HTML tag.
     * @param children The children of the tag 
     */
    function head(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("head", children);
    }
    
    /**
     * @dev Creates a `head` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function head(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("head", attributes, children);
    }
      
    /**
     * @dev Creates a `link` HTML tag.
     */
    function link() internal pure returns (string memory) {
        return h("link");
    }
    
    /**
     * @dev Creates a `link` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function link(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("link", attributes);
    }
    
    /**
     * @dev Creates a `meta` HTML tag.
     */
    function meta() internal pure returns (string memory) {
        return h("meta");
    }
    
    /**
     * @dev Creates a `meta` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function meta(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("meta", attributes);
    }
    
    /**
     * @dev Creates a `style` HTML tag.
     */
    function style() internal pure returns (string memory) {
        return h("style");
    }
    
    /**
     * @dev Creates a `style` HTML tag.
     * @param children The children of the tag 
     */
    function style(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("style", children);
    }
    
    /**
     * @dev Creates a `style` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function style(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("style", attributes, children);
    }
      
    /**
     * @dev Creates a `title` HTML tag.
     */
    function title() internal pure returns (string memory) {
        return h("title");
    }
    
    /**
     * @dev Creates a `title` HTML tag.
     * @param children The children of the tag 
     */
    function title(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("title", children);
    }
    
    /**
     * @dev Creates a `title` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function title(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("title", attributes, children);
    }
      
    /**
     * @dev Creates a `body` HTML tag.
     */
    function body() internal pure returns (string memory) {
        return h("body");
    }
    
    /**
     * @dev Creates a `body` HTML tag.
     * @param children The children of the tag 
     */
    function body(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("body", children);
    }
    
    /**
     * @dev Creates a `body` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function body(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("body", attributes, children);
    }
      
    /**
     * @dev Creates a `address` HTML tag.
     */
    function htmlAddress() internal pure returns (string memory) {
        return h("address");
    }
    
    /**
     * @dev Creates a `address` HTML tag.
     * @param children The children of the tag 
     */
    function htmlAddress(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("address", children);
    }
    
    /**
     * @dev Creates a `address` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function htmlAddress(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("address", attributes, children);
    }
      
    /**
     * @dev Creates a `article` HTML tag.
     */
    function article() internal pure returns (string memory) {
        return h("article");
    }
    
    /**
     * @dev Creates a `article` HTML tag.
     * @param children The children of the tag 
     */
    function article(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("article", children);
    }
    
    /**
     * @dev Creates a `article` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function article(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("article", attributes, children);
    }
      
    /**
     * @dev Creates a `aside` HTML tag.
     */
    function aside() internal pure returns (string memory) {
        return h("aside");
    }
    
    /**
     * @dev Creates a `aside` HTML tag.
     * @param children The children of the tag 
     */
    function aside(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("aside", children);
    }
    
    /**
     * @dev Creates a `aside` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function aside(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("aside", attributes, children);
    }
      
    /**
     * @dev Creates a `footer` HTML tag.
     */
    function footer() internal pure returns (string memory) {
        return h("footer");
    }
    
    /**
     * @dev Creates a `footer` HTML tag.
     * @param children The children of the tag 
     */
    function footer(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("footer", children);
    }
    
    /**
     * @dev Creates a `footer` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function footer(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("footer", attributes, children);
    }
      
    /**
     * @dev Creates a `header` HTML tag.
     */
    function header() internal pure returns (string memory) {
        return h("header");
    }
    
    /**
     * @dev Creates a `header` HTML tag.
     * @param children The children of the tag 
     */
    function header(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("header", children);
    }
    
    /**
     * @dev Creates a `header` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function header(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("header", attributes, children);
    }
      
    /**
     * @dev Creates a `h1` HTML tag.
     */
    function h1() internal pure returns (string memory) {
        return h("h1");
    }
    
    /**
     * @dev Creates a `h1` HTML tag.
     * @param children The children of the tag 
     */
    function h1(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("h1", children);
    }
    
    /**
     * @dev Creates a `h1` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h1(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("h1", attributes, children);
    }
      
    /**
     * @dev Creates a `h2` HTML tag.
     */
    function h2() internal pure returns (string memory) {
        return h("h2");
    }
    
    /**
     * @dev Creates a `h2` HTML tag.
     * @param children The children of the tag 
     */
    function h2(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("h2", children);
    }
    
    /**
     * @dev Creates a `h2` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h2(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("h2", attributes, children);
    }
      
    /**
     * @dev Creates a `h3` HTML tag.
     */
    function h3() internal pure returns (string memory) {
        return h("h3");
    }
    
    /**
     * @dev Creates a `h3` HTML tag.
     * @param children The children of the tag 
     */
    function h3(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("h3", children);
    }
    
    /**
     * @dev Creates a `h3` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h3(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("h3", attributes, children);
    }
      
    /**
     * @dev Creates a `h4` HTML tag.
     */
    function h4() internal pure returns (string memory) {
        return h("h4");
    }
    
    /**
     * @dev Creates a `h4` HTML tag.
     * @param children The children of the tag 
     */
    function h4(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("h4", children);
    }
    
    /**
     * @dev Creates a `h4` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h4(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("h4", attributes, children);
    }
      
    /**
     * @dev Creates a `h5` HTML tag.
     */
    function h5() internal pure returns (string memory) {
        return h("h5");
    }
    
    /**
     * @dev Creates a `h5` HTML tag.
     * @param children The children of the tag 
     */
    function h5(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("h5", children);
    }
    
    /**
     * @dev Creates a `h5` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h5(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("h5", attributes, children);
    }
      
    /**
     * @dev Creates a `h6` HTML tag.
     */
    function h6() internal pure returns (string memory) {
        return h("h6");
    }
    
    /**
     * @dev Creates a `h6` HTML tag.
     * @param children The children of the tag 
     */
    function h6(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("h6", children);
    }
    
    /**
     * @dev Creates a `h6` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function h6(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("h6", attributes, children);
    }
      
    /**
     * @dev Creates a `main` HTML tag.
     */
    function main() internal pure returns (string memory) {
        return h("main");
    }
    
    /**
     * @dev Creates a `main` HTML tag.
     * @param children The children of the tag 
     */
    function main(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("main", children);
    }
    
    /**
     * @dev Creates a `main` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function main(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("main", attributes, children);
    }
      
    /**
     * @dev Creates a `nav` HTML tag.
     */
    function nav() internal pure returns (string memory) {
        return h("nav");
    }
    
    /**
     * @dev Creates a `nav` HTML tag.
     * @param children The children of the tag 
     */
    function nav(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("nav", children);
    }
    
    /**
     * @dev Creates a `nav` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function nav(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("nav", attributes, children);
    }
      
    /**
     * @dev Creates a `section` HTML tag.
     */
    function section() internal pure returns (string memory) {
        return h("section");
    }
    
    /**
     * @dev Creates a `section` HTML tag.
     * @param children The children of the tag 
     */
    function section(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("section", children);
    }
    
    /**
     * @dev Creates a `section` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function section(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("section", attributes, children);
    }
      
    /**
     * @dev Creates a `blockquote` HTML tag.
     */
    function blockquote() internal pure returns (string memory) {
        return h("blockquote");
    }
    
    /**
     * @dev Creates a `blockquote` HTML tag.
     * @param children The children of the tag 
     */
    function blockquote(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("blockquote", children);
    }
    
    /**
     * @dev Creates a `blockquote` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function blockquote(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("blockquote", attributes, children);
    }
      
    /**
     * @dev Creates a `dd` HTML tag.
     */
    function dd() internal pure returns (string memory) {
        return h("dd");
    }
    
    /**
     * @dev Creates a `dd` HTML tag.
     * @param children The children of the tag 
     */
    function dd(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("dd", children);
    }
    
    /**
     * @dev Creates a `dd` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function dd(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("dd", attributes, children);
    }
      
    /**
     * @dev Creates a `div` HTML tag.
     */
    function div() internal pure returns (string memory) {
        return h("div");
    }
    
    /**
     * @dev Creates a `div` HTML tag.
     * @param children The children of the tag 
     */
    function div(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("div", children);
    }
    
    /**
     * @dev Creates a `div` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function div(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("div", attributes, children);
    }
      
    /**
     * @dev Creates a `dl` HTML tag.
     */
    function dl() internal pure returns (string memory) {
        return h("dl");
    }
    
    /**
     * @dev Creates a `dl` HTML tag.
     * @param children The children of the tag 
     */
    function dl(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("dl", children);
    }
    
    /**
     * @dev Creates a `dl` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function dl(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("dl", attributes, children);
    }
      
    /**
     * @dev Creates a `dt` HTML tag.
     */
    function dt() internal pure returns (string memory) {
        return h("dt");
    }
    
    /**
     * @dev Creates a `dt` HTML tag.
     * @param children The children of the tag 
     */
    function dt(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("dt", children);
    }
    
    /**
     * @dev Creates a `dt` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function dt(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("dt", attributes, children);
    }
      
    /**
     * @dev Creates a `figcaption` HTML tag.
     */
    function figcaption() internal pure returns (string memory) {
        return h("figcaption");
    }
    
    /**
     * @dev Creates a `figcaption` HTML tag.
     * @param children The children of the tag 
     */
    function figcaption(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("figcaption", children);
    }
    
    /**
     * @dev Creates a `figcaption` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function figcaption(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("figcaption", attributes, children);
    }
      
    /**
     * @dev Creates a `figure` HTML tag.
     */
    function figure() internal pure returns (string memory) {
        return h("figure");
    }
    
    /**
     * @dev Creates a `figure` HTML tag.
     * @param children The children of the tag 
     */
    function figure(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("figure", children);
    }
    
    /**
     * @dev Creates a `figure` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function figure(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("figure", attributes, children);
    }
      
    /**
     * @dev Creates a `hr` HTML tag.
     */
    function hr() internal pure returns (string memory) {
        return h("hr");
    }
    
    /**
     * @dev Creates a `hr` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function hr(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("hr", attributes);
    }
    
    /**
     * @dev Creates a `li` HTML tag.
     */
    function li() internal pure returns (string memory) {
        return h("li");
    }
    
    /**
     * @dev Creates a `li` HTML tag.
     * @param children The children of the tag 
     */
    function li(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("li", children);
    }
    
    /**
     * @dev Creates a `li` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function li(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("li", attributes, children);
    }
      
    /**
     * @dev Creates a `menu` HTML tag.
     */
    function menu() internal pure returns (string memory) {
        return h("menu");
    }
    
    /**
     * @dev Creates a `menu` HTML tag.
     * @param children The children of the tag 
     */
    function menu(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("menu", children);
    }
    
    /**
     * @dev Creates a `menu` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function menu(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("menu", attributes, children);
    }
      
    /**
     * @dev Creates a `ol` HTML tag.
     */
    function ol() internal pure returns (string memory) {
        return h("ol");
    }
    
    /**
     * @dev Creates a `ol` HTML tag.
     * @param children The children of the tag 
     */
    function ol(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("ol", children);
    }
    
    /**
     * @dev Creates a `ol` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function ol(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("ol", attributes, children);
    }
      
    /**
     * @dev Creates a `p` HTML tag.
     */
    function p() internal pure returns (string memory) {
        return h("p");
    }
    
    /**
     * @dev Creates a `p` HTML tag.
     * @param children The children of the tag 
     */
    function p(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("p", children);
    }
    
    /**
     * @dev Creates a `p` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function p(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("p", attributes, children);
    }
      
    /**
     * @dev Creates a `pre` HTML tag.
     */
    function pre() internal pure returns (string memory) {
        return h("pre");
    }
    
    /**
     * @dev Creates a `pre` HTML tag.
     * @param children The children of the tag 
     */
    function pre(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("pre", children);
    }
    
    /**
     * @dev Creates a `pre` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function pre(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("pre", attributes, children);
    }
      
    /**
     * @dev Creates a `ul` HTML tag.
     */
    function ul() internal pure returns (string memory) {
        return h("ul");
    }
    
    /**
     * @dev Creates a `ul` HTML tag.
     * @param children The children of the tag 
     */
    function ul(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("ul", children);
    }
    
    /**
     * @dev Creates a `ul` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function ul(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("ul", attributes, children);
    }
      
    /**
     * @dev Creates a `a` HTML tag.
     */
    function a() internal pure returns (string memory) {
        return h("a");
    }
    
    /**
     * @dev Creates a `a` HTML tag.
     * @param children The children of the tag 
     */
    function a(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("a", children);
    }
    
    /**
     * @dev Creates a `a` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function a(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("a", attributes, children);
    }
      
    /**
     * @dev Creates a `abbr` HTML tag.
     */
    function abbr() internal pure returns (string memory) {
        return h("abbr");
    }
    
    /**
     * @dev Creates a `abbr` HTML tag.
     * @param children The children of the tag 
     */
    function abbr(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("abbr", children);
    }
    
    /**
     * @dev Creates a `abbr` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function abbr(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("abbr", attributes, children);
    }
      
    /**
     * @dev Creates a `b` HTML tag.
     */
    function b() internal pure returns (string memory) {
        return h("b");
    }
    
    /**
     * @dev Creates a `b` HTML tag.
     * @param children The children of the tag 
     */
    function b(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("b", children);
    }
    
    /**
     * @dev Creates a `b` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function b(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("b", attributes, children);
    }
      
    /**
     * @dev Creates a `bdi` HTML tag.
     */
    function bdi() internal pure returns (string memory) {
        return h("bdi");
    }
    
    /**
     * @dev Creates a `bdi` HTML tag.
     * @param children The children of the tag 
     */
    function bdi(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("bdi", children);
    }
    
    /**
     * @dev Creates a `bdi` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function bdi(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("bdi", attributes, children);
    }
      
    /**
     * @dev Creates a `bdo` HTML tag.
     */
    function bdo() internal pure returns (string memory) {
        return h("bdo");
    }
    
    /**
     * @dev Creates a `bdo` HTML tag.
     * @param children The children of the tag 
     */
    function bdo(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("bdo", children);
    }
    
    /**
     * @dev Creates a `bdo` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function bdo(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("bdo", attributes, children);
    }
      
    /**
     * @dev Creates a `br` HTML tag.
     */
    function br() internal pure returns (string memory) {
        return h("br");
    }
    
    /**
     * @dev Creates a `br` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function br(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("br", attributes);
    }
    
    /**
     * @dev Creates a `cite` HTML tag.
     */
    function cite() internal pure returns (string memory) {
        return h("cite");
    }
    
    /**
     * @dev Creates a `cite` HTML tag.
     * @param children The children of the tag 
     */
    function cite(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("cite", children);
    }
    
    /**
     * @dev Creates a `cite` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function cite(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("cite", attributes, children);
    }
      
    /**
     * @dev Creates a `code` HTML tag.
     */
    function code() internal pure returns (string memory) {
        return h("code");
    }
    
    /**
     * @dev Creates a `code` HTML tag.
     * @param children The children of the tag 
     */
    function code(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("code", children);
    }
    
    /**
     * @dev Creates a `code` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function code(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("code", attributes, children);
    }
      
    /**
     * @dev Creates a `data` HTML tag.
     */
    function data() internal pure returns (string memory) {
        return h("data");
    }
    
    /**
     * @dev Creates a `data` HTML tag.
     * @param children The children of the tag 
     */
    function data(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("data", children);
    }
    
    /**
     * @dev Creates a `data` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function data(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("data", attributes, children);
    }
      
    /**
     * @dev Creates a `dfn` HTML tag.
     */
    function dfn() internal pure returns (string memory) {
        return h("dfn");
    }
    
    /**
     * @dev Creates a `dfn` HTML tag.
     * @param children The children of the tag 
     */
    function dfn(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("dfn", children);
    }
    
    /**
     * @dev Creates a `dfn` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function dfn(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("dfn", attributes, children);
    }
      
    /**
     * @dev Creates a `em` HTML tag.
     */
    function em() internal pure returns (string memory) {
        return h("em");
    }
    
    /**
     * @dev Creates a `em` HTML tag.
     * @param children The children of the tag 
     */
    function em(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("em", children);
    }
    
    /**
     * @dev Creates a `em` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function em(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("em", attributes, children);
    }
      
    /**
     * @dev Creates a `i` HTML tag.
     */
    function i() internal pure returns (string memory) {
        return h("i");
    }
    
    /**
     * @dev Creates a `i` HTML tag.
     * @param children The children of the tag 
     */
    function i(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("i", children);
    }
    
    /**
     * @dev Creates a `i` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function i(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("i", attributes, children);
    }
      
    /**
     * @dev Creates a `kbd` HTML tag.
     */
    function kbd() internal pure returns (string memory) {
        return h("kbd");
    }
    
    /**
     * @dev Creates a `kbd` HTML tag.
     * @param children The children of the tag 
     */
    function kbd(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("kbd", children);
    }
    
    /**
     * @dev Creates a `kbd` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function kbd(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("kbd", attributes, children);
    }
      
    /**
     * @dev Creates a `mark` HTML tag.
     */
    function mark() internal pure returns (string memory) {
        return h("mark");
    }
    
    /**
     * @dev Creates a `mark` HTML tag.
     * @param children The children of the tag 
     */
    function mark(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("mark", children);
    }
    
    /**
     * @dev Creates a `mark` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function mark(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("mark", attributes, children);
    }
      
    /**
     * @dev Creates a `q` HTML tag.
     */
    function q() internal pure returns (string memory) {
        return h("q");
    }
    
    /**
     * @dev Creates a `q` HTML tag.
     * @param children The children of the tag 
     */
    function q(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("q", children);
    }
    
    /**
     * @dev Creates a `q` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function q(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("q", attributes, children);
    }
      
    /**
     * @dev Creates a `rp` HTML tag.
     */
    function rp() internal pure returns (string memory) {
        return h("rp");
    }
    
    /**
     * @dev Creates a `rp` HTML tag.
     * @param children The children of the tag 
     */
    function rp(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("rp", children);
    }
    
    /**
     * @dev Creates a `rp` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function rp(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("rp", attributes, children);
    }
      
    /**
     * @dev Creates a `rt` HTML tag.
     */
    function rt() internal pure returns (string memory) {
        return h("rt");
    }
    
    /**
     * @dev Creates a `rt` HTML tag.
     * @param children The children of the tag 
     */
    function rt(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("rt", children);
    }
    
    /**
     * @dev Creates a `rt` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function rt(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("rt", attributes, children);
    }
      
    /**
     * @dev Creates a `ruby` HTML tag.
     */
    function ruby() internal pure returns (string memory) {
        return h("ruby");
    }
    
    /**
     * @dev Creates a `ruby` HTML tag.
     * @param children The children of the tag 
     */
    function ruby(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("ruby", children);
    }
    
    /**
     * @dev Creates a `ruby` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function ruby(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("ruby", attributes, children);
    }
      
    /**
     * @dev Creates a `s` HTML tag.
     */
    function s() internal pure returns (string memory) {
        return h("s");
    }
    
    /**
     * @dev Creates a `s` HTML tag.
     * @param children The children of the tag 
     */
    function s(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("s", children);
    }
    
    /**
     * @dev Creates a `s` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function s(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("s", attributes, children);
    }
      
    /**
     * @dev Creates a `samp` HTML tag.
     */
    function samp() internal pure returns (string memory) {
        return h("samp");
    }
    
    /**
     * @dev Creates a `samp` HTML tag.
     * @param children The children of the tag 
     */
    function samp(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("samp", children);
    }
    
    /**
     * @dev Creates a `samp` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function samp(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("samp", attributes, children);
    }
      
    /**
     * @dev Creates a `small` HTML tag.
     */
    function small() internal pure returns (string memory) {
        return h("small");
    }
    
    /**
     * @dev Creates a `small` HTML tag.
     * @param children The children of the tag 
     */
    function small(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("small", children);
    }
    
    /**
     * @dev Creates a `small` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function small(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("small", attributes, children);
    }
      
    /**
     * @dev Creates a `span` HTML tag.
     */
    function span() internal pure returns (string memory) {
        return h("span");
    }
    
    /**
     * @dev Creates a `span` HTML tag.
     * @param children The children of the tag 
     */
    function span(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("span", children);
    }
    
    /**
     * @dev Creates a `span` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function span(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("span", attributes, children);
    }
      
    /**
     * @dev Creates a `strong` HTML tag.
     */
    function strong() internal pure returns (string memory) {
        return h("strong");
    }
    
    /**
     * @dev Creates a `strong` HTML tag.
     * @param children The children of the tag 
     */
    function strong(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("strong", children);
    }
    
    /**
     * @dev Creates a `strong` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function strong(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("strong", attributes, children);
    }
      
    /**
     * @dev Creates a `sub` HTML tag.
     */
    function sub() internal pure returns (string memory) {
        return h("sub");
    }
    
    /**
     * @dev Creates a `sub` HTML tag.
     * @param children The children of the tag 
     */
    function sub(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("sub", children);
    }
    
    /**
     * @dev Creates a `sub` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function sub(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("sub", attributes, children);
    }
      
    /**
     * @dev Creates a `sup` HTML tag.
     */
    function sup() internal pure returns (string memory) {
        return h("sup");
    }
    
    /**
     * @dev Creates a `sup` HTML tag.
     * @param children The children of the tag 
     */
    function sup(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("sup", children);
    }
    
    /**
     * @dev Creates a `sup` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function sup(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("sup", attributes, children);
    }
      
    /**
     * @dev Creates a `time` HTML tag.
     */
    function time() internal pure returns (string memory) {
        return h("time");
    }
    
    /**
     * @dev Creates a `time` HTML tag.
     * @param children The children of the tag 
     */
    function time(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("time", children);
    }
    
    /**
     * @dev Creates a `time` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function time(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("time", attributes, children);
    }
      
    /**
     * @dev Creates a `u` HTML tag.
     */
    function u() internal pure returns (string memory) {
        return h("u");
    }
    
    /**
     * @dev Creates a `u` HTML tag.
     * @param children The children of the tag 
     */
    function u(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("u", children);
    }
    
    /**
     * @dev Creates a `u` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function u(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("u", attributes, children);
    }
      
    /**
     * @dev Creates a `var` HTML tag.
     */
    function htmlVar() internal pure returns (string memory) {
        return h("var");
    }
    
    /**
     * @dev Creates a `var` HTML tag.
     * @param children The children of the tag 
     */
    function htmlVar(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("var", children);
    }
    
    /**
     * @dev Creates a `var` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function htmlVar(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("var", attributes, children);
    }
      
    /**
     * @dev Creates a `wbr` HTML tag.
     */
    function wbr() internal pure returns (string memory) {
        return h("wbr");
    }
    
    /**
     * @dev Creates a `wbr` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function wbr(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("wbr", attributes);
    }
    
    /**
     * @dev Creates a `area` HTML tag.
     */
    function area() internal pure returns (string memory) {
        return h("area");
    }
    
    /**
     * @dev Creates a `area` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function area(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("area", attributes);
    }
    
    /**
     * @dev Creates a `audio` HTML tag.
     */
    function audio() internal pure returns (string memory) {
        return h("audio");
    }
    
    /**
     * @dev Creates a `audio` HTML tag.
     * @param children The children of the tag 
     */
    function audio(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("audio", children);
    }
    
    /**
     * @dev Creates a `audio` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function audio(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("audio", attributes, children);
    }
      
    /**
     * @dev Creates a `img` HTML tag.
     */
    function img() internal pure returns (string memory) {
        return h("img");
    }
    
    /**
     * @dev Creates a `img` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function img(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("img", attributes);
    }
    
    /**
     * @dev Creates a `map` HTML tag.
     */
    function map() internal pure returns (string memory) {
        return h("map");
    }
    
    /**
     * @dev Creates a `map` HTML tag.
     * @param children The children of the tag 
     */
    function map(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("map", children);
    }
    
    /**
     * @dev Creates a `map` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function map(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("map", attributes, children);
    }
      
    /**
     * @dev Creates a `track` HTML tag.
     */
    function track() internal pure returns (string memory) {
        return h("track");
    }
    
    /**
     * @dev Creates a `track` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function track(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("track", attributes);
    }
    
    /**
     * @dev Creates a `video` HTML tag.
     */
    function video() internal pure returns (string memory) {
        return h("video");
    }
    
    /**
     * @dev Creates a `video` HTML tag.
     * @param children The children of the tag 
     */
    function video(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("video", children);
    }
    
    /**
     * @dev Creates a `video` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function video(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("video", attributes, children);
    }
      
    /**
     * @dev Creates a `embed` HTML tag.
     */
    function embed() internal pure returns (string memory) {
        return h("embed");
    }
    
    /**
     * @dev Creates a `embed` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function embed(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("embed", attributes);
    }
    
    /**
     * @dev Creates a `iframe` HTML tag.
     */
    function iframe() internal pure returns (string memory) {
        return h("iframe");
    }
    
    /**
     * @dev Creates a `iframe` HTML tag.
     * @param children The children of the tag 
     */
    function iframe(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("iframe", children);
    }
    
    /**
     * @dev Creates a `iframe` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function iframe(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("iframe", attributes, children);
    }
      
    /**
     * @dev Creates a `object` HTML tag.
     */
    function object() internal pure returns (string memory) {
        return h("object");
    }
    
    /**
     * @dev Creates a `object` HTML tag.
     * @param children The children of the tag 
     */
    function object(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("object", children);
    }
    
    /**
     * @dev Creates a `object` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function object(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("object", attributes, children);
    }
      
    /**
     * @dev Creates a `picture` HTML tag.
     */
    function picture() internal pure returns (string memory) {
        return h("picture");
    }
    
    /**
     * @dev Creates a `picture` HTML tag.
     * @param children The children of the tag 
     */
    function picture(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("picture", children);
    }
    
    /**
     * @dev Creates a `picture` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function picture(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("picture", attributes, children);
    }
      
    /**
     * @dev Creates a `portal` HTML tag.
     */
    function portal() internal pure returns (string memory) {
        return h("portal");
    }
    
    /**
     * @dev Creates a `portal` HTML tag.
     * @param children The children of the tag 
     */
    function portal(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("portal", children);
    }
    
    /**
     * @dev Creates a `portal` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function portal(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("portal", attributes, children);
    }
      
    /**
     * @dev Creates a `source` HTML tag.
     */
    function source() internal pure returns (string memory) {
        return h("source");
    }
    
    /**
     * @dev Creates a `source` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function source(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("source", attributes);
    }
    
    /**
     * @dev Creates a `svg` HTML tag.
     */
    function svg() internal pure returns (string memory) {
        return h("svg");
    }
    
    /**
     * @dev Creates a `svg` HTML tag.
     * @param children The children of the tag 
     */
    function svg(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("svg", children);
    }
    
    /**
     * @dev Creates a `svg` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function svg(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("svg", attributes, children);
    }
      
    /**
     * @dev Creates a `canvas` HTML tag.
     */
    function canvas() internal pure returns (string memory) {
        return h("canvas");
    }
    
    /**
     * @dev Creates a `canvas` HTML tag.
     * @param children The children of the tag 
     */
    function canvas(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("canvas", children);
    }
    
    /**
     * @dev Creates a `canvas` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function canvas(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("canvas", attributes, children);
    }
      
    /**
     * @dev Creates a `noscript` HTML tag.
     */
    function noscript() internal pure returns (string memory) {
        return h("noscript");
    }
    
    /**
     * @dev Creates a `noscript` HTML tag.
     * @param children The children of the tag 
     */
    function noscript(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("noscript", children);
    }
    
    /**
     * @dev Creates a `noscript` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function noscript(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("noscript", attributes, children);
    }
      
    /**
     * @dev Creates a `script` HTML tag.
     */
    function script() internal pure returns (string memory) {
        return h("script");
    }
    
    /**
     * @dev Creates a `script` HTML tag.
     * @param children The children of the tag 
     */
    function script(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("script", children);
    }
    
    /**
     * @dev Creates a `script` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function script(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("script", attributes, children);
    }
      
    /**
     * @dev Creates a `del` HTML tag.
     */
    function del() internal pure returns (string memory) {
        return h("del");
    }
    
    /**
     * @dev Creates a `del` HTML tag.
     * @param children The children of the tag 
     */
    function del(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("del", children);
    }
    
    /**
     * @dev Creates a `del` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function del(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("del", attributes, children);
    }
      
    /**
     * @dev Creates a `ins` HTML tag.
     */
    function ins() internal pure returns (string memory) {
        return h("ins");
    }
    
    /**
     * @dev Creates a `ins` HTML tag.
     * @param children The children of the tag 
     */
    function ins(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("ins", children);
    }
    
    /**
     * @dev Creates a `ins` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function ins(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("ins", attributes, children);
    }
      
    /**
     * @dev Creates a `caption` HTML tag.
     */
    function caption() internal pure returns (string memory) {
        return h("caption");
    }
    
    /**
     * @dev Creates a `caption` HTML tag.
     * @param children The children of the tag 
     */
    function caption(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("caption", children);
    }
    
    /**
     * @dev Creates a `caption` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function caption(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("caption", attributes, children);
    }
      
    /**
     * @dev Creates a `col` HTML tag.
     */
    function col() internal pure returns (string memory) {
        return h("col");
    }
    
    /**
     * @dev Creates a `col` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function col(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("col", attributes);
    }
    
    /**
     * @dev Creates a `colgroup` HTML tag.
     */
    function colgroup() internal pure returns (string memory) {
        return h("colgroup");
    }
    
    /**
     * @dev Creates a `colgroup` HTML tag.
     * @param children The children of the tag 
     */
    function colgroup(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("colgroup", children);
    }
    
    /**
     * @dev Creates a `colgroup` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function colgroup(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("colgroup", attributes, children);
    }
      
    /**
     * @dev Creates a `table` HTML tag.
     */
    function table() internal pure returns (string memory) {
        return h("table");
    }
    
    /**
     * @dev Creates a `table` HTML tag.
     * @param children The children of the tag 
     */
    function table(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("table", children);
    }
    
    /**
     * @dev Creates a `table` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function table(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("table", attributes, children);
    }
      
    /**
     * @dev Creates a `tbody` HTML tag.
     */
    function tbody() internal pure returns (string memory) {
        return h("tbody");
    }
    
    /**
     * @dev Creates a `tbody` HTML tag.
     * @param children The children of the tag 
     */
    function tbody(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("tbody", children);
    }
    
    /**
     * @dev Creates a `tbody` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function tbody(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("tbody", attributes, children);
    }
      
    /**
     * @dev Creates a `td` HTML tag.
     */
    function td() internal pure returns (string memory) {
        return h("td");
    }
    
    /**
     * @dev Creates a `td` HTML tag.
     * @param children The children of the tag 
     */
    function td(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("td", children);
    }
    
    /**
     * @dev Creates a `td` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function td(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("td", attributes, children);
    }
      
    /**
     * @dev Creates a `tfoot` HTML tag.
     */
    function tfoot() internal pure returns (string memory) {
        return h("tfoot");
    }
    
    /**
     * @dev Creates a `tfoot` HTML tag.
     * @param children The children of the tag 
     */
    function tfoot(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("tfoot", children);
    }
    
    /**
     * @dev Creates a `tfoot` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function tfoot(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("tfoot", attributes, children);
    }
      
    /**
     * @dev Creates a `th` HTML tag.
     */
    function th() internal pure returns (string memory) {
        return h("th");
    }
    
    /**
     * @dev Creates a `th` HTML tag.
     * @param children The children of the tag 
     */
    function th(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("th", children);
    }
    
    /**
     * @dev Creates a `th` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function th(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("th", attributes, children);
    }
      
    /**
     * @dev Creates a `thead` HTML tag.
     */
    function thead() internal pure returns (string memory) {
        return h("thead");
    }
    
    /**
     * @dev Creates a `thead` HTML tag.
     * @param children The children of the tag 
     */
    function thead(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("thead", children);
    }
    
    /**
     * @dev Creates a `thead` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function thead(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("thead", attributes, children);
    }
      
    /**
     * @dev Creates a `tr` HTML tag.
     */
    function tr() internal pure returns (string memory) {
        return h("tr");
    }
    
    /**
     * @dev Creates a `tr` HTML tag.
     * @param children The children of the tag 
     */
    function tr(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("tr", children);
    }
    
    /**
     * @dev Creates a `tr` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function tr(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("tr", attributes, children);
    }
      
    /**
     * @dev Creates a `button` HTML tag.
     */
    function button() internal pure returns (string memory) {
        return h("button");
    }
    
    /**
     * @dev Creates a `button` HTML tag.
     * @param children The children of the tag 
     */
    function button(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("button", children);
    }
    
    /**
     * @dev Creates a `button` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function button(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("button", attributes, children);
    }
      
    /**
     * @dev Creates a `datalist` HTML tag.
     */
    function datalist() internal pure returns (string memory) {
        return h("datalist");
    }
    
    /**
     * @dev Creates a `datalist` HTML tag.
     * @param children The children of the tag 
     */
    function datalist(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("datalist", children);
    }
    
    /**
     * @dev Creates a `datalist` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function datalist(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("datalist", attributes, children);
    }
      
    /**
     * @dev Creates a `fieldset` HTML tag.
     */
    function fieldset() internal pure returns (string memory) {
        return h("fieldset");
    }
    
    /**
     * @dev Creates a `fieldset` HTML tag.
     * @param children The children of the tag 
     */
    function fieldset(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("fieldset", children);
    }
    
    /**
     * @dev Creates a `fieldset` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function fieldset(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("fieldset", attributes, children);
    }
      
    /**
     * @dev Creates a `form` HTML tag.
     */
    function form() internal pure returns (string memory) {
        return h("form");
    }
    
    /**
     * @dev Creates a `form` HTML tag.
     * @param children The children of the tag 
     */
    function form(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("form", children);
    }
    
    /**
     * @dev Creates a `form` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function form(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("form", attributes, children);
    }
      
    /**
     * @dev Creates a `input` HTML tag.
     */
    function input() internal pure returns (string memory) {
        return h("input");
    }
    
    /**
     * @dev Creates a `input` HTML tag.
     * @param attributes The attributes for the tag 
     */
    function input(string memory attributes)
        internal
        pure
        returns (string memory)
    {
        return h("input", attributes);
    }
    
    /**
     * @dev Creates a `label` HTML tag.
     */
    function label() internal pure returns (string memory) {
        return h("label");
    }
    
    /**
     * @dev Creates a `label` HTML tag.
     * @param children The children of the tag 
     */
    function label(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("label", children);
    }
    
    /**
     * @dev Creates a `label` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function label(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("label", attributes, children);
    }
      
    /**
     * @dev Creates a `legend` HTML tag.
     */
    function legend() internal pure returns (string memory) {
        return h("legend");
    }
    
    /**
     * @dev Creates a `legend` HTML tag.
     * @param children The children of the tag 
     */
    function legend(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("legend", children);
    }
    
    /**
     * @dev Creates a `legend` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function legend(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("legend", attributes, children);
    }
      
    /**
     * @dev Creates a `meter` HTML tag.
     */
    function meter() internal pure returns (string memory) {
        return h("meter");
    }
    
    /**
     * @dev Creates a `meter` HTML tag.
     * @param children The children of the tag 
     */
    function meter(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("meter", children);
    }
    
    /**
     * @dev Creates a `meter` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function meter(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("meter", attributes, children);
    }
      
    /**
     * @dev Creates a `optgroup` HTML tag.
     */
    function optgroup() internal pure returns (string memory) {
        return h("optgroup");
    }
    
    /**
     * @dev Creates a `optgroup` HTML tag.
     * @param children The children of the tag 
     */
    function optgroup(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("optgroup", children);
    }
    
    /**
     * @dev Creates a `optgroup` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function optgroup(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("optgroup", attributes, children);
    }
      
    /**
     * @dev Creates a `option` HTML tag.
     */
    function option() internal pure returns (string memory) {
        return h("option");
    }
    
    /**
     * @dev Creates a `option` HTML tag.
     * @param children The children of the tag 
     */
    function option(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("option", children);
    }
    
    /**
     * @dev Creates a `option` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function option(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("option", attributes, children);
    }
      
    /**
     * @dev Creates a `output` HTML tag.
     */
    function output() internal pure returns (string memory) {
        return h("output");
    }
    
    /**
     * @dev Creates a `output` HTML tag.
     * @param children The children of the tag 
     */
    function output(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("output", children);
    }
    
    /**
     * @dev Creates a `output` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function output(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("output", attributes, children);
    }
      
    /**
     * @dev Creates a `progress` HTML tag.
     */
    function progress() internal pure returns (string memory) {
        return h("progress");
    }
    
    /**
     * @dev Creates a `progress` HTML tag.
     * @param children The children of the tag 
     */
    function progress(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("progress", children);
    }
    
    /**
     * @dev Creates a `progress` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function progress(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("progress", attributes, children);
    }
      
    /**
     * @dev Creates a `select` HTML tag.
     */
    function select() internal pure returns (string memory) {
        return h("select");
    }
    
    /**
     * @dev Creates a `select` HTML tag.
     * @param children The children of the tag 
     */
    function select(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("select", children);
    }
    
    /**
     * @dev Creates a `select` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function select(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("select", attributes, children);
    }
      
    /**
     * @dev Creates a `textarea` HTML tag.
     */
    function textarea() internal pure returns (string memory) {
        return h("textarea");
    }
    
    /**
     * @dev Creates a `textarea` HTML tag.
     * @param children The children of the tag 
     */
    function textarea(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("textarea", children);
    }
    
    /**
     * @dev Creates a `textarea` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function textarea(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("textarea", attributes, children);
    }
      
    /**
     * @dev Creates a `details` HTML tag.
     */
    function details() internal pure returns (string memory) {
        return h("details");
    }
    
    /**
     * @dev Creates a `details` HTML tag.
     * @param children The children of the tag 
     */
    function details(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("details", children);
    }
    
    /**
     * @dev Creates a `details` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function details(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("details", attributes, children);
    }
      
    /**
     * @dev Creates a `dialog` HTML tag.
     */
    function dialog() internal pure returns (string memory) {
        return h("dialog");
    }
    
    /**
     * @dev Creates a `dialog` HTML tag.
     * @param children The children of the tag 
     */
    function dialog(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("dialog", children);
    }
    
    /**
     * @dev Creates a `dialog` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function dialog(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("dialog", attributes, children);
    }
      
    /**
     * @dev Creates a `summary` HTML tag.
     */
    function summary() internal pure returns (string memory) {
        return h("summary");
    }
    
    /**
     * @dev Creates a `summary` HTML tag.
     * @param children The children of the tag 
     */
    function summary(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("summary", children);
    }
    
    /**
     * @dev Creates a `summary` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function summary(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("summary", attributes, children);
    }
      
    /**
     * @dev Creates a `slot` HTML tag.
     */
    function slot() internal pure returns (string memory) {
        return h("slot");
    }
    
    /**
     * @dev Creates a `slot` HTML tag.
     * @param children The children of the tag 
     */
    function slot(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("slot", children);
    }
    
    /**
     * @dev Creates a `slot` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function slot(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("slot", attributes, children);
    }
      
    /**
     * @dev Creates a `template` HTML tag.
     */
    function template() internal pure returns (string memory) {
        return h("template");
    }
    
    /**
     * @dev Creates a `template` HTML tag.
     * @param children The children of the tag 
     */
    function template(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("template", children);
    }
    
    /**
     * @dev Creates a `template` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function template(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("template", attributes, children);
    }
      
    /**
     * @dev Creates a `acronym` HTML tag.
     */
    function acronym() internal pure returns (string memory) {
        return h("acronym");
    }
    
    /**
     * @dev Creates a `acronym` HTML tag.
     * @param children The children of the tag 
     */
    function acronym(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("acronym", children);
    }
    
    /**
     * @dev Creates a `acronym` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function acronym(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("acronym", attributes, children);
    }
      
    /**
     * @dev Creates a `applet` HTML tag.
     */
    function applet() internal pure returns (string memory) {
        return h("applet");
    }
    
    /**
     * @dev Creates a `applet` HTML tag.
     * @param children The children of the tag 
     */
    function applet(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("applet", children);
    }
    
    /**
     * @dev Creates a `applet` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function applet(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("applet", attributes, children);
    }
      
    /**
     * @dev Creates a `bgsound` HTML tag.
     */
    function bgsound() internal pure returns (string memory) {
        return h("bgsound");
    }
    
    /**
     * @dev Creates a `bgsound` HTML tag.
     * @param children The children of the tag 
     */
    function bgsound(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("bgsound", children);
    }
    
    /**
     * @dev Creates a `bgsound` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function bgsound(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("bgsound", attributes, children);
    }
      
    /**
     * @dev Creates a `big` HTML tag.
     */
    function big() internal pure returns (string memory) {
        return h("big");
    }
    
    /**
     * @dev Creates a `big` HTML tag.
     * @param children The children of the tag 
     */
    function big(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("big", children);
    }
    
    /**
     * @dev Creates a `big` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function big(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("big", attributes, children);
    }
      
    /**
     * @dev Creates a `blink` HTML tag.
     */
    function blink() internal pure returns (string memory) {
        return h("blink");
    }
    
    /**
     * @dev Creates a `blink` HTML tag.
     * @param children The children of the tag 
     */
    function blink(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("blink", children);
    }
    
    /**
     * @dev Creates a `blink` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function blink(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("blink", attributes, children);
    }
      
    /**
     * @dev Creates a `center` HTML tag.
     */
    function center() internal pure returns (string memory) {
        return h("center");
    }
    
    /**
     * @dev Creates a `center` HTML tag.
     * @param children The children of the tag 
     */
    function center(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("center", children);
    }
    
    /**
     * @dev Creates a `center` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function center(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("center", attributes, children);
    }
      
    /**
     * @dev Creates a `content` HTML tag.
     */
    function content() internal pure returns (string memory) {
        return h("content");
    }
    
    /**
     * @dev Creates a `content` HTML tag.
     * @param children The children of the tag 
     */
    function content(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("content", children);
    }
    
    /**
     * @dev Creates a `content` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function content(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("content", attributes, children);
    }
      
    /**
     * @dev Creates a `dir` HTML tag.
     */
    function dir() internal pure returns (string memory) {
        return h("dir");
    }
    
    /**
     * @dev Creates a `dir` HTML tag.
     * @param children The children of the tag 
     */
    function dir(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("dir", children);
    }
    
    /**
     * @dev Creates a `dir` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function dir(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("dir", attributes, children);
    }
      
    /**
     * @dev Creates a `font` HTML tag.
     */
    function font() internal pure returns (string memory) {
        return h("font");
    }
    
    /**
     * @dev Creates a `font` HTML tag.
     * @param children The children of the tag 
     */
    function font(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("font", children);
    }
    
    /**
     * @dev Creates a `font` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function font(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("font", attributes, children);
    }
      
    /**
     * @dev Creates a `frame` HTML tag.
     */
    function frame() internal pure returns (string memory) {
        return h("frame");
    }
    
    /**
     * @dev Creates a `frame` HTML tag.
     * @param children The children of the tag 
     */
    function frame(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("frame", children);
    }
    
    /**
     * @dev Creates a `frame` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function frame(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("frame", attributes, children);
    }
      
    /**
     * @dev Creates a `frameset` HTML tag.
     */
    function frameset() internal pure returns (string memory) {
        return h("frameset");
    }
    
    /**
     * @dev Creates a `frameset` HTML tag.
     * @param children The children of the tag 
     */
    function frameset(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("frameset", children);
    }
    
    /**
     * @dev Creates a `frameset` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function frameset(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("frameset", attributes, children);
    }
      
    /**
     * @dev Creates a `image` HTML tag.
     */
    function image() internal pure returns (string memory) {
        return h("image");
    }
    
    /**
     * @dev Creates a `image` HTML tag.
     * @param children The children of the tag 
     */
    function image(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("image", children);
    }
    
    /**
     * @dev Creates a `image` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function image(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("image", attributes, children);
    }
      
    /**
     * @dev Creates a `keygen` HTML tag.
     */
    function keygen() internal pure returns (string memory) {
        return h("keygen");
    }
    
    /**
     * @dev Creates a `keygen` HTML tag.
     * @param children The children of the tag 
     */
    function keygen(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("keygen", children);
    }
    
    /**
     * @dev Creates a `keygen` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function keygen(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("keygen", attributes, children);
    }
      
    /**
     * @dev Creates a `marquee` HTML tag.
     */
    function marquee() internal pure returns (string memory) {
        return h("marquee");
    }
    
    /**
     * @dev Creates a `marquee` HTML tag.
     * @param children The children of the tag 
     */
    function marquee(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("marquee", children);
    }
    
    /**
     * @dev Creates a `marquee` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function marquee(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("marquee", attributes, children);
    }
      
    /**
     * @dev Creates a `menuitem` HTML tag.
     */
    function menuitem() internal pure returns (string memory) {
        return h("menuitem");
    }
    
    /**
     * @dev Creates a `menuitem` HTML tag.
     * @param children The children of the tag 
     */
    function menuitem(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("menuitem", children);
    }
    
    /**
     * @dev Creates a `menuitem` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function menuitem(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("menuitem", attributes, children);
    }
      
    /**
     * @dev Creates a `nobr` HTML tag.
     */
    function nobr() internal pure returns (string memory) {
        return h("nobr");
    }
    
    /**
     * @dev Creates a `nobr` HTML tag.
     * @param children The children of the tag 
     */
    function nobr(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("nobr", children);
    }
    
    /**
     * @dev Creates a `nobr` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function nobr(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("nobr", attributes, children);
    }
      
    /**
     * @dev Creates a `noembed` HTML tag.
     */
    function noembed() internal pure returns (string memory) {
        return h("noembed");
    }
    
    /**
     * @dev Creates a `noembed` HTML tag.
     * @param children The children of the tag 
     */
    function noembed(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("noembed", children);
    }
    
    /**
     * @dev Creates a `noembed` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function noembed(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("noembed", attributes, children);
    }
      
    /**
     * @dev Creates a `noframes` HTML tag.
     */
    function noframes() internal pure returns (string memory) {
        return h("noframes");
    }
    
    /**
     * @dev Creates a `noframes` HTML tag.
     * @param children The children of the tag 
     */
    function noframes(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("noframes", children);
    }
    
    /**
     * @dev Creates a `noframes` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function noframes(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("noframes", attributes, children);
    }
      
    /**
     * @dev Creates a `param` HTML tag.
     */
    function param() internal pure returns (string memory) {
        return h("param");
    }
    
    /**
     * @dev Creates a `param` HTML tag.
     * @param children The children of the tag 
     */
    function param(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("param", children);
    }
    
    /**
     * @dev Creates a `param` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function param(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("param", attributes, children);
    }
      
    /**
     * @dev Creates a `plaintext` HTML tag.
     */
    function plaintext() internal pure returns (string memory) {
        return h("plaintext");
    }
    
    /**
     * @dev Creates a `plaintext` HTML tag.
     * @param children The children of the tag 
     */
    function plaintext(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("plaintext", children);
    }
    
    /**
     * @dev Creates a `plaintext` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function plaintext(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("plaintext", attributes, children);
    }
      
    /**
     * @dev Creates a `rb` HTML tag.
     */
    function rb() internal pure returns (string memory) {
        return h("rb");
    }
    
    /**
     * @dev Creates a `rb` HTML tag.
     * @param children The children of the tag 
     */
    function rb(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("rb", children);
    }
    
    /**
     * @dev Creates a `rb` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function rb(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("rb", attributes, children);
    }
      
    /**
     * @dev Creates a `rtc` HTML tag.
     */
    function rtc() internal pure returns (string memory) {
        return h("rtc");
    }
    
    /**
     * @dev Creates a `rtc` HTML tag.
     * @param children The children of the tag 
     */
    function rtc(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("rtc", children);
    }
    
    /**
     * @dev Creates a `rtc` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function rtc(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("rtc", attributes, children);
    }
      
    /**
     * @dev Creates a `shadow` HTML tag.
     */
    function shadow() internal pure returns (string memory) {
        return h("shadow");
    }
    
    /**
     * @dev Creates a `shadow` HTML tag.
     * @param children The children of the tag 
     */
    function shadow(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("shadow", children);
    }
    
    /**
     * @dev Creates a `shadow` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function shadow(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("shadow", attributes, children);
    }
      
    /**
     * @dev Creates a `spacer` HTML tag.
     */
    function spacer() internal pure returns (string memory) {
        return h("spacer");
    }
    
    /**
     * @dev Creates a `spacer` HTML tag.
     * @param children The children of the tag 
     */
    function spacer(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("spacer", children);
    }
    
    /**
     * @dev Creates a `spacer` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function spacer(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("spacer", attributes, children);
    }
      
    /**
     * @dev Creates a `strike` HTML tag.
     */
    function strike() internal pure returns (string memory) {
        return h("strike");
    }
    
    /**
     * @dev Creates a `strike` HTML tag.
     * @param children The children of the tag 
     */
    function strike(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("strike", children);
    }
    
    /**
     * @dev Creates a `strike` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function strike(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("strike", attributes, children);
    }
      
    /**
     * @dev Creates a `tt` HTML tag.
     */
    function tt() internal pure returns (string memory) {
        return h("tt");
    }
    
    /**
     * @dev Creates a `tt` HTML tag.
     * @param children The children of the tag 
     */
    function tt(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("tt", children);
    }
    
    /**
     * @dev Creates a `tt` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function tt(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("tt", attributes, children);
    }
      
    /**
     * @dev Creates a `xmp` HTML tag.
     */
    function xmp() internal pure returns (string memory) {
        return h("xmp");
    }
    
    /**
     * @dev Creates a `xmp` HTML tag.
     * @param children The children of the tag 
     */
    function xmp(string memory children)
        internal
        pure
        returns (string memory)
    {
        return h("xmp", children);
    }
    
    /**
     * @dev Creates a `xmp` HTML tag.
     * @param attributes The attributes for the tag
     * @param children The children of the tag
     */
    function xmp(
        string memory attributes,
        string memory children
    ) internal pure returns (string memory) {
        return h("xmp", attributes, children);
    }
      
    /**
     * @dev Creates an `html` HTML tag with the correct HTML 5
     * `DOCTYPE`.
     */
    function html5(string memory children)
        internal
        pure
        returns (string memory)
    {
        return StringConcat.concat("<!DOCTYPE html>", html(children));
    }
}